# -*- coding: utf-8 -*-
"""Exercício 4 – RNA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Yno5D3AzvvR4pNutCzmCvRlTmBzE_nP6

# Para a=0 e b=0
"""

import sympy as sp

# Definindo variáveis simbólicas
a, b = sp.symbols("a b")
a=0;
b=0;

# Definindo as expressões
n1 = sp.Max((-1 * a + 1 * b + 0), 0)
n2 = sp.Max((1 * a - 1 * b + 2), 0)
n3 = sp.Max((1 * n1 + 0 * n2 + 3), 0)
n4 = sp.Max((1 * n2 - 2 * n1 + 1), 0)
n5 = sp.Max((-1 * n3 + 2 * n4 - 1), 0)


# Função para avaliar as expressões para valores de 'a' e 'b'
def avaliar_expressoes(valor_a, valor_b):
    resultado_n5 = n5.subs({a: valor_a, b: valor_b})
    resultado_n4 = n4.subs({a: valor_a, b: valor_b})
    resultado_n3 = n3.subs({a: valor_a, b: valor_b})
    resultado_n2 = n2.subs({a: valor_a, b: valor_b})
    resultado_n1 = n1.subs({a: valor_a, b: valor_b})

    return resultado_n5, resultado_n4, resultado_n3, resultado_n2, resultado_n1


# Avaliando as expressões para a=1 e b=2
resultado = avaliar_expressoes(1, 1)

# Exibindo os resultados
print(f"n5 = {resultado[0]}")
print(f"n4 = {resultado[1]}")
print(f"n3 = {resultado[2]}")
print(f"n2 = {resultado[3]}")
print(f"n1 = {resultado[4]}")

"""# Para a=0 e b=1

"""

import sympy as sp

# Definindo variáveis simbólicas
a, b = sp.symbols("a b")
a=0;
b=1;

# Definindo as expressões
n1 = sp.Max((-1 * a + 1 * b + 0), 0)
n2 = sp.Max((1 * a - 1 * b + 2), 0)
n3 = sp.Max((1 * n1 + 0 * n2 + 3), 0)
n4 = sp.Max((1 * n2 - 2 * n1 + 1), 0)
n5 = sp.Max((-1 * n3 + 2 * n4 - 1), 0)


# Função para avaliar as expressões para valores de 'a' e 'b'
def avaliar_expressoes(valor_a, valor_b):
    resultado_n5 = n5.subs({a: valor_a, b: valor_b})
    resultado_n4 = n4.subs({a: valor_a, b: valor_b})
    resultado_n3 = n3.subs({a: valor_a, b: valor_b})
    resultado_n2 = n2.subs({a: valor_a, b: valor_b})
    resultado_n1 = n1.subs({a: valor_a, b: valor_b})

    return resultado_n5, resultado_n4, resultado_n3, resultado_n2, resultado_n1


# Avaliando as expressões para a=1 e b=2
resultado = avaliar_expressoes(1, 1)

# Exibindo os resultados
print(f"n5 = {resultado[0]}")
print(f"n4 = {resultado[1]}")
print(f"n3 = {resultado[2]}")
print(f"n2 = {resultado[3]}")
print(f"n1 = {resultado[4]}")

"""# Para a=1 e b=0

"""

import sympy as sp

# Definindo variáveis simbólicas
a, b = sp.symbols("a b")
a=1;
b=0;

# Definindo as expressões
n1 = sp.Max((-1 * a + 1 * b + 0), 0)
n2 = sp.Max((1 * a - 1 * b + 2), 0)
n3 = sp.Max((1 * n1 + 0 * n2 + 3), 0)
n4 = sp.Max((1 * n2 - 2 * n1 + 1), 0)
n5 = sp.Max((-1 * n3 + 2 * n4 - 1), 0)


# Função para avaliar as expressões para valores de 'a' e 'b'
def avaliar_expressoes(valor_a, valor_b):
    resultado_n5 = n5.subs({a: valor_a, b: valor_b})
    resultado_n4 = n4.subs({a: valor_a, b: valor_b})
    resultado_n3 = n3.subs({a: valor_a, b: valor_b})
    resultado_n2 = n2.subs({a: valor_a, b: valor_b})
    resultado_n1 = n1.subs({a: valor_a, b: valor_b})

    return resultado_n5, resultado_n4, resultado_n3, resultado_n2, resultado_n1


# Avaliando as expressões para a=1 e b=2
resultado = avaliar_expressoes(1, 1)

# Exibindo os resultados
print(f"n5 = {resultado[0]}")
print(f"n4 = {resultado[1]}")
print(f"n3 = {resultado[2]}")
print(f"n2 = {resultado[3]}")
print(f"n1 = {resultado[4]}")

"""# Para a=1 e b=1



"""

import sympy as sp

# Definindo variáveis simbólicas
a, b = sp.symbols("a b")
a=1;
b=1;

# Definindo as expressões
n1 = sp.Max((-1 * a + 1 * b + 0), 0)
n2 = sp.Max((1 * a - 1 * b + 2), 0)
n3 = sp.Max((1 * n1 + 0 * n2 + 3), 0)
n4 = sp.Max((1 * n2 - 2 * n1 + 1), 0)
n5 = sp.Max((-1 * n3 + 2 * n4 - 1), 0)


# Função para avaliar as expressões para valores de 'a' e 'b'
def avaliar_expressoes(valor_a, valor_b):
    resultado_n5 = n5.subs({a: valor_a, b: valor_b})
    resultado_n4 = n4.subs({a: valor_a, b: valor_b})
    resultado_n3 = n3.subs({a: valor_a, b: valor_b})
    resultado_n2 = n2.subs({a: valor_a, b: valor_b})
    resultado_n1 = n1.subs({a: valor_a, b: valor_b})

    return resultado_n5, resultado_n4, resultado_n3, resultado_n2, resultado_n1


# Avaliando as expressões para a=1 e b=2
resultado = avaliar_expressoes(1, 1)

# Exibindo os resultados
print(f"n5 = {resultado[0]}")
print(f"n4 = {resultado[1]}")
print(f"n3 = {resultado[2]}")
print(f"n2 = {resultado[3]}")
print(f"n1 = {resultado[4]}")